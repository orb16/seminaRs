ggplot <- function(...) ggplot2::ggplot(...)
source('~/.active-rstudio-document', echo=TRUE)
miteplot1 +
geom_point(aes(colour = SubsDens))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +  #shrub as smooth
scale_colour_manual(values = c("royalblue", "orange")) + # ?? change
guides(colour=guide_legend(override.aes=list(fill=NA)))
miteplot1
miteplot1 + geom_point()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = mite_all, aes(y = Brachy, x = WatrCont))+
geom_point(aes(colour = Shrub, shape = Shrub), size = 6) +
scale_colour_manual(values = c("forestgreen", "orange", "royalblue")) +
scale_shape_manual(values = c(8, 18, 3))+
theme_classic()
miteplot1 +
geom_point(aes(colour = Shrub, shape = Shrub), size = 6) +
scale_colour_manual(values = c("forestgreen", "orange", "royalblue")) +
scale_shape_manual(values = c(8, 18, 3))+
theme_classic()
source('~/.active-rstudio-document', echo=TRUE)
miteplot1 +
geom_point(aes(colour = Shrub, shape = Shrub), size = 6) +
scale_colour_manual(values = c("forestgreen", "orange", "royalblue")) +
scale_shape_manual(values = c(8, 18, 3))+
theme_classic()
miteplot1 +
geom_point(aes(colour = Shrub, shape = Shrub), size = 6) +
scale_colour_manual(values = c("forestgreen", "orange", "royalblue")) +
scale_shape_manual(values = c(8, 18, 3))+
theme_classic()
source('~/.active-rstudio-document', echo=TRUE)
miteplot1 +
geom_point(aes(colour = Topo))+
scale_colour_manual(values = c("royalblue", "orange")) +
theme(legend.position = "bottom",
legend.key = element_blank(),
legend.background = element_rect(colour = "gray"))
miteplot1 +
geom_point(aes(colour = SubsDens))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +  #shrub as smooth
scale_colour_manual(values = c("royalblue", "orange")) + # ?? change
guides(colour=guide_legend(override.aes=list(fill=NA)))
miteplot1 +
geom_point(aes(colour = SubsDens))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +  #shrub as smooth
# scale_colour_manual(values = c("royalblue", "orange")) + # ?? change
guides(colour=guide_legend(override.aes=list(fill=NA)))
miteplot1 +
geom_point(aes(shape = Shrub))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +  #shrub as smooth
scale_colour_manual(values = c("royalblue", "orange")) + # ?? change
guides(colour=guide_legend(override.aes=list(fill=NA)))
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +  #shrub as smooth
scale_colour_manual(values = c("royalblue", "orange")) + # ?? change
guides(colour=guide_legend(override.aes=list(fill=NA)))
source('~/.active-rstudio-document', echo=TRUE)
ggplot(mite_all, aes(y = Brachy, x = SubsDens)) +
geom_point(aes(shape = Topo), size = 5) +
geom_smooth(aes(linetype = Topo),
colour = "black",
method = lm,
formula = y ~ poly(x, 2)) +
scale_shape_manual(values = c(1, 16)) +
facet_wrap(~Shrub) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "grey"),
legend.key = element_blank())
ggplot(mite_all, aes(y = Brachy, x = SubsDens)) +
geom_point(aes(shape = Topo)) +
geom_smooth(aes(linetype = Topo),
colour = "black",
method = lm,
formula = y ~ poly(x, 2)) +
scale_shape_manual(values = c(1, 16)) +
guides(shape = FALSE, linetype = FALSE) +
facet_grid(Topo~Shrub) +
theme_bw()
head(mite_summarised, 3) # first 3 rows
source('~/.active-rstudio-document', echo=TRUE)
head(mite_summarised, 3) # first 3 rows
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
scale_colour_manual(values = c("royalblue", "orange")) +
guides(colour=guide_legend(override.aes=list(fill=NA)))
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
guides(colour=guide_legend(override.aes=list(fill=NA)))
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
guides(colour=guide_legend(override.aes=list(fill=NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
```
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
guides(colour=guide_legend(override.aes=list(alpha = 1))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
guides(colour=guide_legend(override.aes=list(alpha = 0))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
guides(colour=guide_legend(override.aes=list(alpha = 0.0))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
guides(colour=guide_legend(override.aes=list(alpha = 0.1))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = SubsDens)) +
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
geom_point(aes(colour = Topo))+ #shrub = shape
geom_smooth(method = "lm", aes(colour = Topo)) +
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
theme_bw()+
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
theme_bw()+
theme(legend.position = "bottom", legend.key = element_blank(),
legend.background = element_rect(colour = gray))+
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
theme_bw()+
theme(legend.position = "bottom", legend.key = element_blank(),
legend.background = element_rect(colour = grey))+
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
theme_bw()+
theme(legend.position = "bottom", legend.key = element_blank(),
legend.background = element_rect(colour = gray))+
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
theme_bw()+
theme(legend.position = "bottom", legend.key = element_blank(),
legend.background = element_rect(colour = gray))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
theme_bw()+
theme(legend.position = "bottom", legend.key = element_blank(),
legend.background = element_rect(colour = "gray"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange"))
theme_bw()+
theme(legend.position = "bottom", legend.key = element_blank(),
legend.background = element_rect(colour = "grey"))
miteplot1 +
geom_point(aes(colour = Topo))+
geom_smooth(method = "lm", aes(colour = Topo)) +
guides(colour=guide_legend(override.aes=list(fill = NA))) +
scale_colour_manual(values = c("royalblue", "orange")) +
theme_bw()+
theme(legend.position = "bottom", legend.key = element_blank(),
legend.background = element_rect(colour = "gray"))
(tidy_plot <- ggplot(subset(mite_data2, mite_data2$species == "Brachy"),
aes(x = WatrCont, y = Count)) +
geom_smooth(stat = "identity",
colour = "black",
aes(ymin = LL, ymax = UL, linetype = Topo))+
scale_linetype_manual(values = c(1, 4))+
guides(linetype = guide_legend(override.aes=list(fill=NA)))+
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.direction= "horizontal",
legend.key = element_blank(),
legend.background = element_rect(colour = "grey")) +
labs(y = "Water content",
x = expression(paste(italic("B. armetelius "),"abundance")),
linetype = "Topography") +
coord_cartesian(x = c(130, 600)))
ggplot(mite_summarised, aes(x = Topo, y = mean_count))+
geom_bar(aes(fill = reorder(species, mean_count)),
stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = mean_count - se, ymax = mean_count + se,
group = reorder(species, mean_count)),
width = 0.3,
position = position_dodge(0.9)) +
theme_bw() +
scale_fill_colorblind() +
labs(fill = "Species", y = "Mean abundance\n (+/- SE)") +
facet_wrap(~Shrub) +
theme(legend.position = "bottom")
ggplot(mite_summarised, aes(x = Topo, y = mean_count))+
geom_bar(aes(fill = reorder(species, mean_count)),
stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = mean_count - se, ymax = mean_count + se,
group = reorder(species, mean_count)),
width = 0.3,
position = position_dodge(0.9)) +
theme_excel() +
scale_fill_excel() +
labs(fill = "Species", y = "Mean abundance\n (+/- SE)") +
facet_wrap(~Shrub) +
theme(legend.position = "bottom")
ggplot(mite_summarised, aes(x = Topo, y = mean_count))+
geom_bar(aes(fill = reorder(species, mean_count)),
stat = "identity",
position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = mean_count - se, ymax = mean_count + se,
group = reorder(species, mean_count)),
width = 0.3,
position = position_dodge(0.9)) +
theme_excel() +
scale_fill_excel() +
labs(fill = "Species", y = "Mean abundance\n (+/- SE)") +
facet_wrap(~Shrub)
mite_summarised
ggplot(mite_all
head(mite_all)
head(mite_long)
ggplot(mite_long, aes(x = WatrCont, colour = species, y = species)) +
geom_point() +
theme_excel() +
scale_fill_excel() +
facet_wrap(~Shrub)
ggplot(mite_long, aes(x = WatrCont, colour = species, y = count)) +
geom_point() +
theme_excel() +
scale_fill_excel() +
facet_wrap(~Shrub)
ggplot(mite_long, aes(x = WatrCont, colour = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel() +
facet_wrap(~Shrub)
ggplot(mite_long, aes(x = WatrCont, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel() +
facet_wrap(~Shrub)
ggplot(mite_long, aes(x = WatrCont, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel()
ggplot(mite_long, aes(x = Shrub, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel()
ggplot(mite_sp, aes(x = Shrub, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel()
ggplot(subset(mite_sp, mite_species %in% c("RARD", "TVEL", "LCIL", "HRUF", "PWIL")), aes(x = Shrub, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel()
ggplot(subset(mite_sp, mite_sp$species %in% c("RARD", "TVEL", "LCIL", "HRUF", "PWIL")), aes(x = Shrub, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel()
ggplot(subset(mite_sp, mite_sp$species %in% c("RARD", "TVEL", "Brachy", "HRUF", "PWIL")), aes(x = Shrub, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel()
ggplot(subset(mite_sp, mite_sp$species %in% c("RARD", "TVEL", "Brachy", "Trhypch1", "PWIL")), aes(x = Shrub, fill = species, y = count)) +
geom_boxplot() +
theme_excel() +
scale_fill_excel()
aggregate(mite_sp, count ~ Shrub, mean)
aggregate(mite_sp, Shrub ~ count, mean)
aggregate(Shrub ~ count, mite_sp, mean)
aggregate(count ~ Shrub, mite_sp, mean)
mean_shrub <- aggregate(count ~ Shrub, mite_sp, mean)
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
filter(count > mean(count))
mite_sp_short
levels(mite_sp$species)
levels(mite_sp_short$species)
mite_sp_short$species <- factor(mite_sp_short$species)
levels(mite_sp_short$species)
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
transform(group_mean = mean(count)
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
transform(group_mean = mean(count))
mite_sp_short
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
transform(group_mean = mean(count)) %>%
filter(count > group_mean)
levels(mite_sp_short$species)
mite_sp_short$species <- factor(mite_sp_short$species)
levels(mite_sp_short$species)
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
transform(group_mean = median(count)) %>%
filter(count > group_mean)
mite_sp_short$species <- factor(mite_sp_short$species)
levels(mite_sp_short$species)
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
transform(group_mean = mean(count)) %>%
filter(count > group_mean)
mite_sp_short$species <- factor(mite_sp_short$species)
levels(mite_sp_short$species)
mite_sp_short <- mite_sp %>%
group_by(Shrub) %>%
transform(group_mean = mean(count)) #%>%
mite_sp_short
mite_sp_short <- mite_sp %>%
group_by(Shrub) %>%
transform(group_mean = mean(count)) %>%
group_by(Shrub, species) %>%
filter(count > group_mean)
mite_sp_short$species <- factor(mite_sp_short$species)
levels(mite_sp_short$species)
mite_sp_short$species
levels(mite_sp_short$species)
mite_sp_short <- mite_sp %>%
group_by(Shrub) %>%
transform(group_mean = mean(count)) %>%
group_by(Shrub, species) %>%
filter(count > 1.5 *group_mean)
mite_sp_short$species <- factor(mite_sp_short$species)
levels(mite_sp_short$species)
mite_sp_short <- mite_sp %>%
group_by(Shrub) %>%
transform(group_mean = mean(count)) %>%
group_by(Shrub, species) %>%
filter(count > 2 *group_mean)
mite_sp_short$species <- factor(mite_sp_short$species)
levels(mite_sp_short$species)
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
summarise(mean_species = mean(count)) %>%
arrange(desc(count))
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
summarise(mean_species = mean(count)) %>%
arrange(desc(mean_species))
mite_sp_short
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
summarise(mean_species = mean(count)) %>%
arrange(Shrub, desc(mean_species))
mite_sp_short
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
summarise(mean_species = mean(count)) %>%
arrange(Shrub, desc(mean_species)) %>%
slice(1:5)
require(dplyr)
require(dplyr)
mite_sp_short <- mite_sp %>%
group_by(Shrub, species) %>%
summarise(mean_species = mean(count)) %>%
arrange(Shrub, desc(mean_species)) %>%
slice(1:5)
source('~/.active-rstudio-document', echo=TRUE)
ggsave(phylo_mite, file = "phylo_mite_yeah.png")
mite_funny <- get_image("8b09a9bd-3a2a-4979-8921-2505dad27c43", size = 512)[[1]]
mite_funny
source('~/.active-rstudio-document', echo=TRUE)
coastline <-readOGR("raw_data/kx-new-zealand-coastline-polygon-2007-SHP",
layer = "new-zealand-coastline-polygon-2007")
coastline <-readOGR("/raw_data/kx-new-zealand-coastline-polygon-2007-SHP",
layer = "new-zealand-coastline-polygon-2007")
getwd()
setwd("/Users/Liv/seminaRs/session_6_ggplot")
tramping2<-readOGR("raw_data/Statistics/Spatial Analysis/kx-nz-fsms6-south-island-SHP", layer = "nz-fsms6-south-island")
tramping2<-readOGR("/raw_data/Statistics/Spatial Analysis/kx-nz-fsms6-south-island-SHP", layer = "nz-fsms6-south-island")
getwd()
ls
ls()
tramping2<-readOGR("~/raw_data/Statistics/Spatial Analysis/kx-nz-fsms6-south-island-SHP", layer = "nz-fsms6-south-island")
tramping2<-readOGR("/raw_data/kx-nz-fsms6-south-island-SHP", layer = "nz-fsms6-south-island")
tramping2<-readOGR("raw_data/kx-nz-fsms6-south-island-SHP", layer = "nz-fsms6-south-island")
source('~/.active-rstudio-document', echo=TRUE)
coastline <-readOGR("/raw_data/kx-new-zealand-coastline-polygon-2007-SHP",
layer = "new-zealand-coastline-polygon-2007")
getwd()
coastline <-readOGR("raw_data/kx-new-zealand-coastline-polygon-2007-SHP",
source('~/.active-rstudio-document', echo=TRUE)
coastline <-readOGR("raw_data/kx-new-zealand-coastline-polygon-2007-SHP",
layer = "new-zealand-coastline-polygon-2007")
coast<-fortify(coastline)
#figuring out which bits are the South Island and Stewart Island
head(coast)
levels(coast$id)
unique(coast$id)
base_nz<-ggplot(data = coast[coast$id %in% c(2, 0),], aes(x=long, y = lat))+
geom_path(aes(group = group)) +
coord_map()
base_nz
ggnz<-get_map('nz', source='google', maptype='road',
zoom = 5)
map3 <-ggmap(ggnz)
map3
